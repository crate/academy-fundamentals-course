name: "Tests"

on:
  pull_request:
    branches: ~
    paths:
    - '.github/workflows/tests.yml'
    - 'notebooks/**'
    - 'pyproject.toml'
    - 'requirements.txt'
    - 'requirements-dev.txt'
  push:
    branches: [ main ]
    paths:
    - '.github/workflows/tests.yml'
    - 'notebooks/**'
    - 'pyproject.toml'
    - 'requirements.txt'
    - 'requirements-dev.txt'

  # Allow job to be triggered manually.
  workflow_dispatch:

  # Run job each night after CrateDB nightly has been published.
  schedule:
    - cron: '0 3 * * *'

# Cancel in-progress jobs when pushing to the same branch.
concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:

  test-notebooks:
    name: "
     Python: ${{ matrix.python-version }}
     CrateDB: ${{ matrix.cratedb-version }}
     on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [
          'ubuntu-latest',
        ]
        python-version: [
          '3.10',
          '3.12',
        ]
        cratedb-version: [ 'nightly' ]

    services:
      cratedb:
        image: crate/crate:${{ matrix.cratedb-version }}
        ports:
          - 4200:4200
          - 5432:5432
        env:
          CRATE_HEAP_SIZE: 4g

    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      SKLEARN_ALLOW_DEPRECATED_SKLEARN_PACKAGE_INSTALL: True

    steps:

      - name: Acquire sources
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt

      - name: Set up uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          cache-dependency-glob: "requirements*.txt"
          cache-suffix: ${{ matrix.python-version }}

      - name: Set up project
        run: |
          # Install runtime and development requirements.
          uv pip install --system --upgrade -r requirements.txt -r requirements-dev.txt

      - name: Run linter and software tests
        run: |
          poe check
